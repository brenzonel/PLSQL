CREATE TABLE PR_EMPLOYEES(
    EMP_ID NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 1 NOT NULL ENABLE,
    EMP_NAME VARCHAR2(50),
    EMAIL VARCHAR2(50),
    JOB_ID NUMBER,
    SALARY NUMBER,
    CONSTRAINT EMPLOYEES_ID_PK PRIMARY KEY (EMP_ID),
    CONSTRAINT JOB_ID_FK FOREIGN KEY (JOB_ID) REFERENCES PR_JOBS (JOB_ID)
);
/
ALTER TABLE PR_EMPLOYEES ADD CONSTRAINT JOB_ID_FK FOREIGN KEY (JOB_ID)
	  REFERENCES PR_JOBS (JOB_ID);
/
INSERT INTO PR_EMPLOYEES (EMP_NAME, EMAIL, JOB_ID, SALARY) VALUES ('BRANDON','CORREO@CORREO.MX', 2, 2400);
INSERT INTO PR_EMPLOYEES (EMP_NAME, EMAIL, JOB_ID, SALARY) VALUES ('ALAN','ALAN@CORREO.MX', 1, 2400);
INSERT INTO PR_EMPLOYEES (EMP_NAME, EMAIL, JOB_ID, SALARY) VALUES ('PEDRO','PEDRO@CORREO.MX', 3, 2200);
INSERT INTO PR_EMPLOYEES (EMP_NAME, EMAIL, JOB_ID, SALARY) VALUES ('HECTOR','HECTOR@CORREO.MX', 4, 2100);

COMMIT;

SELECT * FROM PR_EMPLOYEES;
/
CREATE TABLE PR_JOBS (
    JOB_ID NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 1 NOT NULL ENABLE,
    JOB_NAME VARCHAR2(100),
    DEPARTMENT VARCHAR2(100),
    STATUS CHAR(1),
    CONSTRAINT JOBS_ID_PK PRIMARY KEY (JOB_ID)
    USING INDEX  ENABLE
);
/
INSERT INTO PR_JOBS (JOB_NAME, DEPARTMENT, STATUS) VALUES ('VENTAS', 'VENTAS', 'A');
INSERT INTO PR_JOBS (JOB_NAME, DEPARTMENT, STATUS) VALUES ('INGENIERO DE SOFTWARE', 'DESARROLLO', 'A');
INSERT INTO PR_JOBS (JOB_NAME, DEPARTMENT, STATUS) VALUES ('TESTER', 'DESARROLLO', 'A');
INSERT INTO PR_JOBS (JOB_NAME, DEPARTMENT, STATUS) VALUES ('CONTADOR', 'CONTABILIDAD', 'A');

COMMIT;

SELECT *FROM PR_JOBS;
/
UPDATE PR_JOBS SET
DEPARTMENT = NULL;
COMMIT;

ALTER TABLE PR_JOBS MODIFY DEPARTMENT NUMBER;

ALTER TABLE PR_JOBS ADD CONSTRAINT DEP_ID_FK FOREIGN KEY (DEPARTMENT)
	  REFERENCES PR_DEPARTMENTS (DEP_ID);
/
UPDATE PR_JOBS SET DEPARTMENT = 7 WHERE JOB_ID = 1;
UPDATE PR_JOBS SET DEPARTMENT = 6 WHERE JOB_ID = 2;
UPDATE PR_JOBS SET DEPARTMENT = 6 WHERE JOB_ID = 3;
UPDATE PR_JOBS SET DEPARTMENT = 5 WHERE JOB_ID = 4
;
COMMIT;
/
SELECT E.EMP_ID, E.EMP_NAME, E.EMAIL, J.JOB_NAME, D.DEP_NAME
FROM PR_EMPLOYEES E
INNER JOIN PR_JOBS J ON E.JOB_ID = J.JOB_ID
INNER JOIN PR_DEPARTMENTS D ON J.DEPARTMENT = D.DEP_ID
;
/
CREATE TABLE PR_SALES(
    SALE_ID NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 1 NOT NULL ENABLE,
    EMP_ID NUMBER,
    AMOUNT NUMBER (*,3),
    STATSU CHAR(1),
    SALE_DESC VARCHAR2(100),
    CONSTRAINT SALE_ID_PK PRIMARY KEY (SALE_ID),
    CONSTRAINT EMP_ID_FK FOREIGN KEY (EMP_ID) REFERENCES PR_EMPLOYEES (EMP_ID)
);
/
ALTER TABLE PR_SALES RENAME COLUMN STATSU TO STATUS;
/
INSERT INTO PR_SALES(EMP_ID,AMOUNT,STATUS,SALE_DESC) VALUES (2, 200, 'A', 'COMPUTO');
INSERT INTO PR_SALES(EMP_ID,AMOUNT,STATUS,SALE_DESC) VALUES (2, 200100, 'A', 'ERP ORACLE');
INSERT INTO PR_SALES(EMP_ID,AMOUNT,STATUS,SALE_DESC) VALUES (2, 200000, 'A', 'LICENCIA MICROSOFT 360');
INSERT INTO PR_SALES(EMP_ID,AMOUNT,STATUS,SALE_DESC) VALUES (1, 2000, 'A', 'COMPUTO');
INSERT INTO PR_SALES(EMP_ID,AMOUNT,STATUS,SALE_DESC) VALUES (4, 2000, 'A', 'COMPUTO');

COMMIT;

SELECT * FROM PR_SALES;
/
--QUERY TO FIND THE TOTAL SALES PER EMPLOYEES ORIGINAL
SELECT E.EMP_ID,
        E.EMP_NAME,
        SUM(S.AMOUNT) AS TOTAL_SALE
    FROM PR_EMPLOYEES E
    INNER JOIN PR_SALES S ON E.EMP_ID = S.EMP_ID
    WHERE TOTAL_SALE > 0
    GROUP BY EMP_ID, EMP_NAME
    HAVING TOTAL_SALE > 1000
    ORDER BY SUM(AMOUNT) DESC
    ;
--MI SOLUCION
SELECT E.EMP_ID,
        E.EMP_NAME,
        SUM(S.AMOUNT) AS TOTAL_SALE
    FROM PR_EMPLOYEES E
    INNER JOIN PR_SALES S ON E.EMP_ID = S.EMP_ID
    --WHERE SUM(S.AMOUNT) > 0       --QUITO LA SENTENCIA DEL WHERE PORQUE NO HACE LA CONDICION DE LA FUNCION SUM
    GROUP BY E.EMP_ID, E.EMP_NAME   --AGREGO SEUDONIMOS EN LOS CAMPOS
    HAVING SUM(S.AMOUNT) > 1000     --CAMBIO A LA SUMA YA QUE ES LA FUNCION RESULTANTE DEL GROUP BY
    ORDER BY SUM(AMOUNT) DESC
    ;
