set serveroutput on --habilita el output para que se puedan mostrar mensajes con dbs_output.put_putline
declare 
cursor f_vta is
select id_clte, valor, fecha_fact
from Factura_vta;
v_anio number;
v_mes varchar(5);
f_id_clt number;
f1 utl_file.file_type;

cursor v_ac is
select id_clte, anio, mes, valor 
from VENTAS_ACUMULADA;

begin
delete from ventas_acumulada;
f1 := utl_file.fopen ('URL_DIR','prueba.txt','w');
UTL_FILE.PUT_LINE(f1, 'ID' || ' ' || 'AÑO' || ' ' || 'MES' || '  ' || 'VALOR');
 for venta in f_vta loop
	v_anio := to_number(to_char(venta.fecha_fact,'yyyy'));
	v_mes := to_number(to_char(venta.fecha_fact,'mm'));
  begin 
	select id_clte into f_id_clt
	from ventas_acumulada
	where id_clte = venta.id_clte and anio = v_anio and mes = v_mes;
	exception 
  when no_data_found then
  f_id_clt := null;
  end;
	--if f_vta%notfound then -----este found no se puede porque el sql es solo para insert, update y delete
  if f_id_clt is null then
      insert into ventas_acumulada values (venta.id_clte, v_anio, v_mes, venta.valor);
  else
      update ventas_acumulada set valor = nvl(valor,0) + venta.valor where id_clte = venta.id_clte and anio = v_anio and mes = v_mes;
  end if;
  end loop;
  for a_venta in v_ac loop
    if a_venta.mes < 10 then
    utl_file.put_line(f1,a_venta.id_clte || ' ' || a_venta.anio || ' 0' || a_venta.mes || '   ' || a_venta.valor);
    else 
    utl_file.put_line(f1,a_venta.id_clte || ' ' || a_venta.anio || ' ' || a_venta.mes || '   ' || a_venta.valor);
    end if;
    dbms_output.put_line('se escribio en el archivo');
  end loop;
utl_file.fclose(f1);
end;